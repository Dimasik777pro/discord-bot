import sqlite3
import pandas as pd
import discord
from discord.ext import commands
from discord import app_commands
from datetime import datetime, timezone  # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç

#######################################################################################################################################################

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
intents = discord.Intents.default()
intents.message_content = True
intents.members = True  # –ù–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = commands.Bot(command_prefix="!", intents=intents)

############################################################################################################################################################


# ID —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–π)
OWNER_ID = 810897749817819136  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π ID


# –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –±–æ—Ç–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã
async def is_owner(interaction: discord.Interaction) -> bool:
    return interaction.user.id == OWNER_ID


###############################################################################################################################################################

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
warnings = {}

#####################################################################################################################################################################



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
def get_db_connection():
    try:
        conn = sqlite3.connect('users_data.db')
        print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")  # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        return conn
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        return None



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
def add_column_if_not_exists(cursor, table, column, column_definition):
    cursor.execute(f"PRAGMA table_info({table})")
    existing_columns = [column[1] for column in cursor.fetchall()]
    if column not in existing_columns:
        cursor.execute(f"ALTER TABLE {table} ADD COLUMN {column} {column_definition}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
def create_table():
    conn = get_db_connection()
    if conn:
        try:
            c = conn.cursor()
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            c.execute('''CREATE TABLE IF NOT EXISTS users (
                            id INTEGER PRIMARY KEY AUTOINCREMENT,
                            username TEXT UNIQUE,
                            id_discord TEXT,
                            level INTEGER DEFAULT 1,
                            experience INTEGER DEFAULT 0,
                            money INTEGER DEFAULT 0,
                            clan TEXT DEFAULT '–ù–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è',
                            registration_date TEXT)''')
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü points, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            add_column_if_not_exists(c, 'users', 'points', 'INTEGER DEFAULT 0')

            conn.commit()
        except sqlite3.Error as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã: {e}")
        finally:
            conn.close()

# –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
create_table()



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def add_user_to_db(username: str):
    print(f"–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username} –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")  # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    conn = get_db_connection()
    if conn:
        try:
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
            create_table()

            c = conn.cursor()
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º INSERT OR IGNORE, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            c.execute('INSERT OR IGNORE INTO users (username, points, level, experience) VALUES (?, ?, ?, ?)',
                      (username, 0, 0, 0))
            conn.commit()
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")  # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
        except sqlite3.Error as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ SQL
        finally:
            conn.close()
    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")  # –õ–æ–≥–∏—Ä—É–µ–º, –µ—Å–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ



#################################################################################################################################################



# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ Excel
@bot.command()
async def export(ctx):
    conn = get_db_connection()
    if conn:
        try:
            c = conn.cursor()
            c.execute('SELECT * FROM users')
            users = c.fetchall()

            # –°–æ–∑–¥–∞–µ–º DataFrame –∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            columns = ['id', 'username', 'points', 'level', 'experience']
            df = pd.DataFrame(users, columns=columns)

            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Excel
            df.to_excel('users_data.xlsx', index=False)
            await ctx.send("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª users_data.xlsx")
        except Exception as e:
            await ctx.send(f"–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö: {e}")
        finally:
            conn.close()
    else:
        await ctx.send("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")



#################################################################################################################################################



# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
@bot.command()
async def user_info(ctx, username: str):
    conn = get_db_connection()
    if conn:
        try:
            c = conn.cursor()
            c.execute('SELECT * FROM users WHERE username = ?', (username,))
            user = c.fetchone()
            if user:
                await ctx.send(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {username}:\n"
                               f"ID: {user[0]}\n"
                               f"–û—á–∫–∏: {user[2]}\n"
                               f"–£—Ä–æ–≤–µ–Ω—å: {user[3]}\n"
                               f"–û–ø—ã—Ç: {user[4]}")
            else:
                await ctx.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        finally:
            conn.close()
    else:
        await ctx.send("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.command()
async def update_level(ctx, username: str, new_level: int):
    conn = get_db_connection()
    if conn:
        try:
            c = conn.cursor()
            c.execute('UPDATE users SET level = ? WHERE username = ?', (new_level, username))
            conn.commit()
            if c.rowcount > 0:
                await ctx.send(f"–£—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ {new_level}.")
            else:
                await ctx.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        finally:
            conn.close()
    else:
        await ctx.send("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")



################################################################################################################################################



# –°–æ–±—ã—Ç–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
@bot.event
async def on_ready():
    print(f'–ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∫–∞–∫ {bot.user}')
    create_table()  # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    bot.start_time = datetime.now(timezone.utc)  # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞
    try:
        synced = await bot.tree.sync()  # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
        print(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")



####################################################################################################################################################



# –ö–æ–º–∞–Ω–¥–∞ /botinfo –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
@bot.tree.command(name="botinfo", description="–ü–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ.")
async def botinfo(interaction: discord.Interaction):
    embed = discord.Embed(
        title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ {bot.user.name}",
        color=discord.Color.blurple(),
        timestamp=datetime.now(timezone.utc)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º timezone-aware –æ–±—ä–µ–∫—Ç
    )

    embed.set_thumbnail(url=bot.user.avatar.url if bot.user.avatar else "")  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤–∞—Ç–∞—Ä–∫—É –±–æ—Ç–∞
    embed.add_field(name="üìå –ò–º—è –±–æ—Ç–∞:", value=bot.user.name, inline=True)
    embed.add_field(name="üÜî ID –±–æ—Ç–∞:", value=bot.user.id, inline=True)
    embed.add_field(name="üñ• –°–µ—Ä–≤–µ—Ä–æ–≤:", value=len(bot.guilds), inline=True)
    embed.add_field(name="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", value=sum(guild.member_count for guild in bot.guilds), inline=True)

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º start_time, –∫–æ—Ç–æ—Ä—ã–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ on_ready()
    embed.add_field(name="‚è± –ó–∞–ø—É—â–µ–Ω:", value=f"<t:{int(bot.start_time.timestamp())}:R>", inline=True)
    embed.add_field(name="üíª –°–æ–∑–¥–∞–Ω:", value=f"<t:{int(bot.user.created_at.timestamp())}:D>", inline=True)
    embed.add_field(name="‚öôÔ∏è –ü—Ä–µ—Ñ–∏–∫—Å:", value=bot.command_prefix, inline=True)
    embed.set_footer(text=f"–ó–∞–ø—Ä–æ—à–µ–Ω–æ: {interaction.user}", icon_url=interaction.user.avatar.url if interaction.user.avatar else None)

    await interaction.response.send_message(embed=embed)

####################################################################################################################



# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
@bot.tree.command(name="ping", description="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞")
async def ping(interaction: discord.Interaction):
    await interaction.response.send_message("–ü–æ–Ω–≥!")

####################################################################################################################



# –ê–≤–∞—Ç–∞—Ä
@bot.tree.command(name="avatar", description="–ü–æ–∫–∞–∑–∞—Ç—å –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –±–æ—Ç–∞.")
async def avatar(interaction: discord.Interaction, user: discord.User = None):
    user = user or interaction.user

    embed = discord.Embed(
        title=f"–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name}",
        color=discord.Color.blurple()
    )
    embed.set_image(url=user.avatar.url)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –±–æ—Ç–∞
    await interaction.response.send_message(embed=embed)



# Serverinfo
@bot.tree.command(name="serverinfo", description="–ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ.")
async def server_info(interaction: discord.Interaction):
    guild = interaction.guild

    embed = discord.Embed(
        title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ: {guild.name}",
        description="–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —Å–µ—Ä–≤–µ—Ä–µ.",
        color=discord.Color.blurple(),
        timestamp=discord.utils.utcnow()
    )

    embed.add_field(name="üåç –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞", value=guild.name, inline=False)
    embed.add_field(name="üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è", value=guild.created_at.strftime("%d.%m.%Y %H:%M:%S"), inline=True)

    if guild.owner:
        embed.add_field(name="üëë –í–ª–∞–¥–µ–ª–µ—Ü", value=guild.owner.mention, inline=True)
    else:
        embed.add_field(name="üëë –í–ª–∞–¥–µ–ª–µ—Ü", value="Sosisochka", inline=True)

    embed.add_field(name="üßë‚Äçü§ù‚Äçüßë –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", value=str(guild.member_count), inline=True)

    embed.add_field(name="üí¨ –ö–∞–Ω–∞–ª—ã", value=f"{len(guild.text_channels)} —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö, {len(guild.voice_channels)} –≥–æ–ª–æ—Å–æ–≤—ã—Ö", inline=True)

    verification_level = {
        discord.VerificationLevel.low: "–ù–∏–∑–∫–∏–π",
        discord.VerificationLevel.medium: "–°—Ä–µ–¥–Ω–∏–π",
        discord.VerificationLevel.high: "–í—ã—Å–æ–∫–∏–π",
    }
    embed.add_field(name="üîí –£—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", value=verification_level.get(guild.verification_level, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"), inline=True)

    embed.set_thumbnail(url=guild.icon.url if guild.icon else "https://i.imgur.com/fJ8HHkX.png")

    uptime = discord.utils.utcnow() - guild.created_at
    days, seconds = uptime.days, uptime.seconds
    hours = seconds // 3600
    minutes = (seconds % 3600) // 60
    embed.add_field(name="‚è≥ –í—Ä–µ–º—è —Å —Å–æ–∑–¥–∞–Ω–∏—è", value=f"{days} –¥–Ω–µ–π, {hours} —á–∞—Å–æ–≤, {minutes} –º–∏–Ω—É—Ç", inline=True)

    await interaction.response.send_message(embed=embed)



# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.tree.command(name="ban", description="–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def ban(interaction: discord.Interaction, user: discord.User, reason: str = None):
    if interaction.user.guild_permissions.ban_members:
        await interaction.guild.ban(user, reason=reason)
        await interaction.response.send_message(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –∑–∞–±–∞–Ω–µ–Ω.")
    else:
        await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")



# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–∞–∑–±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.tree.command(name="unban", description="–†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def unban(interaction: discord.Interaction, user: discord.User):
    if interaction.user.guild_permissions.ban_members:
        await interaction.guild.unban(user)
        await interaction.response.send_message(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} —Ä–∞–∑–±–∞–Ω–µ–Ω.")
    else:
        await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–∞–∑–±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")



#KICK
@bot.tree.command(name="kick", description="–ö–∏–∫–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞")
async def kick(interaction: discord.Interaction, member: discord.Member, reason: str = "–ù–µ—Ç –ø—Ä–∏—á–∏–Ω—ã"):
    """–ö–∏–∫–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞"""
    await member.kick(reason=reason)
    await interaction.response.send_message(f"{member.mention} –±—ã–ª –∫–∏–∫–Ω—É—Ç. –ü—Ä–∏—á–∏–Ω–∞: {reason}")



###############################################################################################################################


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def add_user_to_db(username: str):
    conn = get_db_connection()
    if conn:
        try:
            c = conn.cursor()
            c.execute('INSERT INTO users (username, points, level, experience) VALUES (?, ?, ?, ?)',
                      (username, 0, 0, 0))
            conn.commit()
        except sqlite3.IntegrityError:
            pass  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        finally:
            conn.close()




# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
def get_db_connection():
    try:
        conn = sqlite3.connect('users_data.db')
        print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")  # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        return conn
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        return None



###############################################################################################################################



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def add_user_to_db(username: str):
    print(f"–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username} –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")  # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    conn = get_db_connection()
    if conn:
        try:
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
            create_table()

            c = conn.cursor()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username} –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
            c.execute('SELECT id FROM users WHERE username = ?', (username,))
            user = c.fetchone()

            if user:
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")  # –õ–æ–≥–∏—Ä—É–µ–º, –µ—Å–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            else:
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –î–æ–±–∞–≤–ª—è–µ–º...")
                c.execute('INSERT INTO users (username, points, level, experience) VALUES (?, ?, ?, ?)',
                          (username, 0, 0, 0))
                conn.commit()
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")  # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
        except sqlite3.Error as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ SQL
        finally:
            conn.close()
    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")  # –õ–æ–≥–∏—Ä—É–µ–º, –µ—Å–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ



# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
@bot.tree.command(name="help", description="–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")
async def help_command(interaction: discord.Interaction):
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    add_user_to_db(interaction.user.name)

    # –°–æ–∑–¥–∞–µ–º Embed –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
    embed = discord.Embed(
        title="–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞",
        description="–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:",
        color=discord.Color.blurple()
    )
    embed.add_field(name="/botinfo", value="–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ", inline=False)
    embed.add_field(name="/ping", value="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞", inline=False)
    embed.add_field(name="/avatar", value="–ü–æ–∫–∞–∑–∞—Ç—å –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –±–æ—Ç–∞", inline=False)
    embed.add_field(name="/serverinfo", value="–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ", inline=False)

    await interaction.response.send_message(embed=embed)



###################################################################################################################################

  # –ö–æ–º–∞–Ω–¥—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞
@bot.tree.command(name="owner_command", description="–ö–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞")
async def owner_command(interaction: discord.Interaction):
    if interaction.user.id != OWNER_ID:
        await interaction.response.send_message("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞.")
        return
    
    await interaction.response.send_message("–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞! –≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞.")



# –ü—Ä–∏–º–µ—Ä –¥—Ä—É–≥–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è
@bot.tree.command(name="reset_db", description="–°–±—Ä–æ—Å–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞)")
async def reset_db(interaction: discord.Interaction):
    if interaction.user.id != OWNER_ID:
        await interaction.response.send_message("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞.")
        return

    conn = get_db_connection()
    if conn:
        try:
            c = conn.cursor()
            c.execute("DROP TABLE IF EXISTS users")  # –£–¥–∞–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            conn.commit()
            await interaction.response.send_message("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–±—Ä–æ—à–µ–Ω–∞.")
        except sqlite3.Error as e:
            await interaction.response.send_message(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        finally:
            conn.close()



# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
@bot.tree.command(name="list_users", description="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞)")
async def list_users(interaction: discord.Interaction):
    if interaction.user.id != OWNER_ID:
        await interaction.response.send_message("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞.")
        return

    conn = get_db_connection()
    if conn:
        try:
            c = conn.cursor()
            c.execute("SELECT username, points, level, experience FROM users")
            users = c.fetchall()

            if users:
                user_list = "\n".join([f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user[0]}, –û—á–∫–∏: {user[1]}, –£—Ä–æ–≤–µ–Ω—å: {user[2]}, –û–ø—ã—Ç: {user[3]}" for user in users])
                await interaction.response.send_message(f"–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n{user_list}")
            else:
                await interaction.response.send_message("–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
        except sqlite3.Error as e:
            await interaction.response.send_message(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        finally:
            conn.close()



# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
@bot.tree.command(name="delete_user", description="–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞)")
async def delete_user(interaction: discord.Interaction, username: str):
    if interaction.user.id != OWNER_ID:
        await interaction.response.send_message("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞.")
        return

    conn = get_db_connection()
    if conn:
        try:
            c = conn.cursor()
            c.execute('DELETE FROM users WHERE username = ?', (username,))
            conn.commit()
            if c.rowcount > 0:
                await interaction.response.send_message(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.")
            else:
                await interaction.response.send_message(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        except sqlite3.Error as e:
            await interaction.response.send_message(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        finally:
            conn.close()  





# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞
@bot.tree.command(name="shutdown", description="–í—ã–∫–ª—é—á–∞–µ—Ç –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è)")
async def shutdown(interaction: discord.Interaction):
    if not await is_owner(interaction):
        await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
        return
    await interaction.response.send_message("–ë–æ—Ç –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è...", ephemeral=True)
    await bot.close()



@bot.tree.command(name="list_servers", description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –±–æ—Ç (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è)")
async def list_servers(interaction: discord.Interaction):
    if not await is_owner(interaction):
        await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
        return

    server_info = []
    for guild in bot.guilds:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
            invites = await guild.invites()
            if invites:
                invite_url = invites[0].url
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
                for channel in guild.text_channels:
                    if channel.permissions_for(guild.me).create_instant_invite:
                        invite_url = await channel.create_invite(max_age=0, max_uses=0, unique=False)
                        invite_url = invite_url.url
                        break
                else:
                    invite_url = "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π"
        except discord.Forbidden:
            invite_url = "–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä/—Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π"

        server_info.append(f"**{guild.name}** ‚Äî [–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä]({invite_url})")

    if not server_info:
        await interaction.response.send_message("–ë–æ—Ç –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –Ω–∏ –Ω–∞ –æ–¥–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
    else:
        response = "\n".join(server_info)
        await interaction.response.send_message(f"–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –±–æ—Ç:\n{response}", ephemeral=True)



# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π)
@bot.tree.command(name="broadcast", description="–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º —Å–µ—Ä–≤–µ—Ä–∞–º (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è)")
async def broadcast(interaction: discord.Interaction, message: str):
    if not await is_owner(interaction):
        await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
        return
    for guild in bot.guilds:
        for channel in guild.text_channels:
            try:
                await channel.send(message)
                break
            except discord.Forbidden:
                continue
    await interaction.response.send_message("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–∞–º.", ephemeral=True)



# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö
@bot.tree.command(name="member_count", description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è)")
async def member_count(interaction: discord.Interaction):
    if not await is_owner(interaction):
        await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
        return
    total_members =     sum(guild.member_count for guild in bot.guilds)
    await interaction.response.send_message(f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö: {total_members}", ephemeral=True)







# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run('MTI1MzY4MzgxMTA1NzkzMDMyMg.GRd21K._LnfC_6IpXrcFmf2TkG4m99F9r55dBN99DnqDM')
